<Activity mc:Ignorable="sap sap2010" x:Class="Process" this:Process.strCurrentDate="08.04.2024" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="dt_TransactionRow" Type="InArgument(sd:DataRow)" />
    <x:Property Name="strCurrentDate" Type="InArgument(x:String)" />
    <x:Property Name="dCurrentDate" Type="InArgument(s:DateTime)" />
    <x:Property Name="strPathExport" Type="InArgument(x:String)" />
    <x:Property Name="strPathResult" Type="InArgument(x:String)" />
    <x:Property Name="dt_Vander" Type="InArgument(sd:DataTable)" />
    <x:Property Name="strPathConfig" Type="InArgument(x:String)" />
    <x:Property Name="dt_BankKey" Type="InArgument(sd:DataTable)" />
    <x:Property Name="strPathInput" Type="InArgument(x:String)" />
    <x:Property Name="rowDetailBank" Type="InOutArgument(x:Int32)" />
  </x:Members>
  <this:Process.dCurrentDate>
    <InArgument x:TypeArguments="s:DateTime" />
  </this:Process.dCurrentDate>
  <this:Process.strPathExport>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.strPathExport>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>820,3468</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="100">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Activities.System.Workflow.Business</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Core.Activities.DateModifications</x:String>
      <x:String>UiPath.Core.Activities.SAP</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="80">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="830.4,3403.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_dataExport" />
      <Variable x:TypeArguments="x:String" Name="strStatusBar" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="ExtractDataTable" />
      <Variable x:TypeArguments="x:String" Name="strStarRow" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Data" />
      <Variable x:TypeArguments="x:String" Name="strHouseBank" />
      <Variable x:TypeArguments="x:String" Name="strPathResult" />
      <Variable x:TypeArguments="ui:GenericValue" Name="strDataVender" />
      <Variable x:TypeArguments="x:String" Name="strEndRow" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Bank" />
      <Variable x:TypeArguments="x:String" Name="strIntermediaryBank" />
      <Variable x:TypeArguments="s:SystemException" Name="SystemExcption" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message Process Start" sap:VirtualizedContainerService.HintSize="768,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Started Process &quot;+dt_TransactionRow.Item(&quot;Bank&quot;).ToString]" />
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="768,164" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strHouseBank]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[dt_TransactionRow.Item("House Bank").ToString]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strPathResult]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[in_Config("Path Report").ToString+dCurrentDate.ToString("yyyy")+"\"+dCurrentDate.ToString("MM")+"\"+dCurrentDate.ToString("dd")+"\Result"]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SAP LogOn.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="768,145.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="SAP LogOn.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="strSAPServer">[in_Config("SAP Server").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="strSAPPath">[in_Config("SAP Path").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="strClientNo">[in_Config("SAP Client Number").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="strUserAccount">[in_Config("User Access").ToString]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Sequence DisplayName="Find Row Bank in Sheet Data" sap:VirtualizedContainerService.HintSize="768,56.8" sap2010:WorkflowViewState.IdRef="Sequence_46">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="625.6,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="excel.exe" />
      <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="625.6,938.4" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,852" sap2010:WorkflowViewState.IdRef="Sequence_34">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="529.6,740" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="Maximize" WorkbookPath="[strPathInput+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,470.4" sap2010:WorkflowViewState.IdRef="Sequence_32">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="address" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:FindReplaceValueX ReplaceWith="{x:Null}" DisplayName="Find/Replace Value" FoundAt="[address]" sap:VirtualizedContainerService.HintSize="433.6,236.8" sap2010:WorkflowViewState.IdRef="FindReplaceValueX_2" LookIn="Values" Operation="Find" ValueToFind="[dt_TransactionRow.Item(&quot;Bank&quot;).ToString]" WhereToSearch="[Excel.Sheet(&quot;Data&quot;).Range(&quot;A8:A100&quot;)]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:FindReplaceValueX>
                      <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strStarRow]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[(Integer.Parse( address.Replace("A",""))+2).ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
    </Sequence>
    <Sequence DisplayName="Find End Row" sap:VirtualizedContainerService.HintSize="768,56.8" sap2010:WorkflowViewState.IdRef="Sequence_51">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="row" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[row]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[strStarRow]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,84" sap2010:WorkflowViewState.IdRef="CommentOut_4">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="602,192" sap2010:WorkflowViewState.IdRef="Sequence_60">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" WorkbookPath="[in_Config(&quot;Path Input&quot;).ToString+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="506,279" sap2010:WorkflowViewState.IdRef="Sequence_53">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,168" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;Data&quot;).Range(&quot;A&quot;+row+&quot;:R&quot;+row)]" SaveTo="[dt_Data]" />
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <ui:ReadRange AddHeaders="False" DataTable="[dt_Data]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="434,120" sap2010:WorkflowViewState.IdRef="ReadRange_2" Range="[&quot;A&quot;+row+&quot;:R&quot;+row]" SheetName="Data" WorkbookPath="[strPathInput+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadRange>
      <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[not String.IsNullOrEmpty( dt_Data.Rows(0).Item(&quot;Column2&quot;).ToString)]" DisplayName="Find End Row" sap:VirtualizedContainerService.HintSize="434,84" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
        <ui:InterruptibleWhile.Body>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="485,420" sap2010:WorkflowViewState.IdRef="Sequence_47">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="423,57" sap2010:WorkflowViewState.IdRef="CommentOut_5">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="602,192" sap2010:WorkflowViewState.IdRef="Sequence_61">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_5" ResizeWindow="None" WorkbookPath="[in_Config(&quot;Path Input&quot;).ToString+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
                    <ueab:ExcelApplicationCard.Body>
                      <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="506,279" sap2010:WorkflowViewState.IdRef="Sequence_59">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,168" sap2010:WorkflowViewState.IdRef="ReadRangeX_4" Range="[Excel.Sheet(&quot;Data&quot;).Range(&quot;A&quot;+row+&quot;:R&quot;+row)]" SaveTo="[dt_Data]" />
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelApplicationCard.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelApplicationCard>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <ui:ReadRange AddHeaders="False" DataTable="[dt_Data]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="423,120" sap2010:WorkflowViewState.IdRef="ReadRange_3" Range="[&quot;A&quot;+row+&quot;:R&quot;+row]" SheetName="Data" WorkbookPath="[strPathInput+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ReadRange>
            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="423,155" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strEndRow]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[(Integer.Parse( row) +1).ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[row]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[(Integer.Parse( row) +1).ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
          </Sequence>
        </ui:InterruptibleWhile.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InterruptibleWhile>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,164" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;End Row: &quot;+strEndRow]" />
    </Sequence>
    <Sequence DisplayName="FBL1N" sap:VirtualizedContainerService.HintSize="768,2640.8" sap2010:WorkflowViewState.IdRef="Sequence_52">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="row" />
        <Variable x:TypeArguments="x:Int32" Name="index" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="705.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[row]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[strStarRow]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ReadRange AddHeaders="False" DataTable="[dt_Data]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="705.6,120" sap2010:WorkflowViewState.IdRef="ReadRange_4" Range="[&quot;A&quot;+row+&quot;:T&quot;+row]" SheetName="Data" WorkbookPath="[strPathInput+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadRange>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="705.6,56.8" sap2010:WorkflowViewState.IdRef="CommentOut_6">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="602,192" sap2010:WorkflowViewState.IdRef="Sequence_62">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" ResizeWindow="None" WorkbookPath="[in_Config(&quot;Path Input&quot;).ToString+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="506,279" sap2010:WorkflowViewState.IdRef="Sequence_56">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,168" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(&quot;Data&quot;).Range(&quot;A&quot;+row+&quot;:R&quot;+row)]" SaveTo="[dt_Data]" />
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <ui:InterruptibleWhile Condition="[not String.IsNullOrEmpty( dt_Data.Rows(0).Item(1).ToString)]" CurrentIndex="[index]" DisplayName="While" sap:VirtualizedContainerService.HintSize="705.6,2238.4" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
        <ui:InterruptibleWhile.Body>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="670.4,2048" sap2010:WorkflowViewState.IdRef="Sequence_50">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="strBankType" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[String.IsNullOrEmpty(dt_Data.Rows(0).Item(14).ToString)]" sap:VirtualizedContainerService.HintSize="608,1142.4" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="515.2,888.8" sap2010:WorkflowViewState.IdRef="Sequence_57">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="452.8,800" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                    <TryCatch.Try>
                      <Sequence sap:VirtualizedContainerService.HintSize="416,545.6" sap2010:WorkflowViewState.IdRef="Sequence_63">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[dt_TransactionRow.Item(&quot;Bank&quot;).ToString+&quot;  Vender  &quot;+dt_Data.Rows(0).Item(1).ToString +&quot;  Get Data Row &quot; +row]" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get BP.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,145.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Get BP.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="strVender">["A"+dt_Data.Rows(0).Item(1).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strPathConfig">[strPathConfig]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strSAPPath">[in_Config("SAP Path").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strBankData">[dt_Data.Rows(0).Item(2).ToString]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="strBankType">[strBankType]</OutArgument>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_BankKey">[dt_BankKey]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strPathResult">[strPathResult]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="strIntermediaryBank">[strIntermediaryBank]</OutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FBL1N.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="353.6,136.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="FBL1N.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="strVender">["A"+dt_Data.Rows(0).Item(1).ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strCurrentDate">[strCurrentDate]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strPathResult">[strPathResult]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strBank">[dt_TransactionRow.Item("Bank").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strHouseBank">[strHouseBank]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strPathConfig">[strPathConfig]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strEndRow">[strEndRow]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strStartRow">[strStarRow]</InArgument>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_Data">[dt_Data]</InArgument>
                            <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_BankBPConfig">[dt_BankKey]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strBankType">[strBankType]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strPathInput">[strPathInput+dCurrentDate.ToString("dd.MM.yyyy")+".xlsx"]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strGL">[dt_TransactionRow.Item("GL").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strDataRow">[row]</InArgument>
                            <InArgument x:TypeArguments="s:DateTime" x:Key="dCurrentDate">[dCurrentDate]</InArgument>
                            <InArgument x:TypeArguments="sd:DataRow" x:Key="dt_TransactionRow">[dt_TransactionRow]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="strIntermediaryBank">[strIntermediaryBank]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="419.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence sap:VirtualizedContainerService.HintSize="496,424" sap2010:WorkflowViewState.IdRef="Sequence_66">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:SystemException">[SystemExcption]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:SystemException">[new SystemException(exception.Message)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3">
                              <ueab:ExcelProcessScopeX.Body>
                                <ActivityAction x:TypeArguments="ui:IExcelProcess">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,136" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="354,48" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_6" ResizeWindow="None" WorkbookPath="[strPathInput+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
                                      <ueab:ExcelApplicationCard.Body>
                                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,25" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Data&quot;).Cell(&quot;O&quot;+row)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,182" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[exception.Message]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:WriteCellX>
                                          </Sequence>
                                        </ActivityAction>
                                      </ueab:ExcelApplicationCard.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ueab:ExcelApplicationCard>
                                  </Sequence>
                                </ActivityAction>
                              </ueab:ExcelProcessScopeX.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ueab:ExcelProcessScopeX>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SAP LogOn.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,136.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="SAP LogOn.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="strSAPServer">[in_Config("SAP Server").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="strSAPPath">[in_Config("SAP Path").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="strClientNo">[in_Config("SAP Client Number").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="strUserAccount">[in_Config("User Access").ToString]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,83.2" sap2010:WorkflowViewState.IdRef="Sequence_58">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;Skip Bank [&quot;+dt_TransactionRow.Item(&quot;Bank&quot;).ToString+&quot;]  Vender  [&quot;+dt_Data.Rows(0).Item(1).ToString +&quot;]  Data Row  [&quot; +row +&quot;]  Doc 64 [&quot;+dt_Data.Rows(0).Item(14).ToString+&quot;]&quot;]" />
                </Sequence>
              </If.Else>
            </If>
            <Sequence sap:VirtualizedContainerService.HintSize="608,620.8" sap2010:WorkflowViewState.IdRef="Sequence_74">
              <Sequence.Variables>
                <Variable x:TypeArguments="ui:GenericValue" Name="strDocNo" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ReadCell Cell="[&quot;O&quot;+row]" DisplayName="Read Cell Workbook" sap:VirtualizedContainerService.HintSize="545.6,120" sap2010:WorkflowViewState.IdRef="ReadCell_1" SheetName="Data" WorkbookPath="[strPathInput+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
                <ui:ReadCell.Result>
                  <OutArgument x:TypeArguments="ui:GenericValue">[strDocNo]</OutArgument>
                </ui:ReadCell.Result>
              </ui:ReadCell>
              <If Condition="[strDocNo.Substring(0,2).Equals(&quot;64&quot;)]" sap:VirtualizedContainerService.HintSize="545.6,380" sap2010:WorkflowViewState.IdRef="If_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="654.4,3366.4" sap2010:WorkflowViewState.IdRef="Sequence_72">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence DisplayName="Write Detail Bank" sap:VirtualizedContainerService.HintSize="592,56.8" sap2010:WorkflowViewState.IdRef="Sequence_69">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="449.6,216" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[strPathInput+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,83.2" sap2010:WorkflowViewState.IdRef="Sequence_68">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelWriteCell Cell="[&quot;B&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="353.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Detail bank" Text="[(index+1).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;C&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="353.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Detail bank" Text="[dt_Data.Rows(0).Item(&quot;Column1&quot;).ToString.Substring(0,4)]" />
                              <ui:ExcelWriteCell Cell="[&quot;D&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="353.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Detail bank" Text="[dt_Data.Rows(0).Item(&quot;Column2&quot;).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;E&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="353.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Detail bank" Text="[dt_Data.Rows(0).Item(&quot;Column3&quot;).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;F&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="353.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Detail bank" Text="[&quot;'&quot;+dt_Data.Rows(0).Item(&quot;Column4&quot;).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;G&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="353.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="Detail bank" Text="[dt_Data.Rows(0).Item(&quot;Column5&quot;).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;H&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="353.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Detail bank" Text="[dt_Data.Rows(0).Item(&quot;Column6&quot;).ToString]" />
                              <ui:ExcelWriteCell Cell="D26" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="353.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="Detail bank" Text="[dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)]" />
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="353.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_9" Message="[&quot;Write [&quot;+dt_Data.Rows(0).Item(&quot;Column1&quot;).ToString.Substring(0,4)+&quot;] [&quot;+dt_Data.Rows(0).Item(&quot;Column2&quot;).ToString+&quot;]  Sheet Detail bank Row [&quot;+rowDetailBank.ToString+&quot;]&quot;]" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                      </ui:ExcelApplicationScope>
                    </Sequence>
                    <Sequence DisplayName="Write Detail bank_Cash flow" sap:VirtualizedContainerService.HintSize="592,3220.8" sap2010:WorkflowViewState.IdRef="Sequence_70">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strSheetName" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="529.6,133.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strSheetName]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">Detail bank_Cash flow</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="529.6,2975.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[strPathInput+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,2842.4" sap2010:WorkflowViewState.IdRef="Sequence_71">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="sd:DataTable" Name="dt_TempVender" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:FilterDataTable DataTable="[dt_Vander]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="433.6,194.4" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dt_TempVender]" SelectColumnsMode="Remove">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                      <ui:FilterOperationArgument.Column>
                                        <InArgument x:TypeArguments="x:String">["GL_Bank_To"]</InArgument>
                                      </ui:FilterOperationArgument.Column>
                                      <ui:FilterOperationArgument.Operand>
                                        <InArgument x:TypeArguments="x:String">[dt_Data.Rows(0).Item("Column1").ToString.Substring(0,4)]</InArgument>
                                      </ui:FilterOperationArgument.Operand>
                                    </ui:FilterOperationArgument>
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <x:Null />
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                              </ui:FilterDataTable>
                              <ui:ExcelWriteCell Cell="[&quot;A&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="[strSheetName]" Text="[(index+1).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;B&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="[strSheetName]" Text="[in_Config(&quot;Company Code&quot;).ToString+&quot;_&quot;+in_Config(&quot;Branch&quot;).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;C&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="[strSheetName]" Text="[dt_TransactionRow.Item(2).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;D&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="[strSheetName]" Text="[in_Config(&quot;Company Code&quot;).ToString+&quot;_&quot;+dt_TransactionRow.Item(6).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;E&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="[strSheetName]" Text="[dt_Data.Rows(0).Item(1).ToString.Substring(0,4)]" />
                              <ui:ExcelWriteCell Cell="[&quot;F&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="[strSheetName]" Text="[dt_Data.Rows(0).Item(2).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;G&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="[strSheetName]" Text="[dt_Data.Rows(0).Item(3).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;H&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="[strSheetName]" Text="USD" />
                              <ui:ExcelWriteCell Cell="[&quot;I&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="[strSheetName]" Text="[&quot;'&quot;+dt_Data.Rows(0).Item(4).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;J&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="[strSheetName]" Text="[dt_Data.Rows(0).Item(5).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;K&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="[strSheetName]" Text="[dt_Data.Rows(0).Item(6).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;L&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="[strSheetName]" Text="THB" />
                              <ui:ExcelWriteCell Cell="[&quot;M&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="[strSheetName]" Text="THB" />
                              <ui:ExcelWriteCell Cell="[&quot;N&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="[strSheetName]" Text="THB" />
                              <ui:ExcelWriteCell Cell="[&quot;O&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="[strSheetName]" Text="[dt_Data.Rows(0).Item(&quot;Column1&quot;).ToString.Substring(0,4)+&quot;_&quot;+in_Config(&quot;Branch&quot;).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;P&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="[strSheetName]" Text="[dt_TempVender.Rows(0).Item(&quot;BAHTNET TO ACCOUNT&quot;).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;Q&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="[strSheetName]" Text="[dt_TempVender.Rows(0).Item(&quot;GL_Bank_To&quot;).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;R&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="[strSheetName]" Text="[dt_TempVender.Rows(0).Item(&quot;COMPANY&quot;).ToString]" />
                              <ui:ExcelWriteCell Cell="[&quot;T&quot;+rowDetailBank.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="433.6,120" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_27" SheetName="[strSheetName]" Text="[dCurrentDate.ToString(&quot;yyyy-MM-dd&quot;)]" />
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_11" Message="[&quot;Write [&quot;+dt_Data.Rows(0).Item(&quot;Column1&quot;).ToString.Substring(0,4)+&quot;] [&quot;+dt_Data.Rows(0).Item(&quot;Column2&quot;).ToString+&quot;]  Sheet Detail bank_Cash flow Row [&quot;+rowDetailBank.ToString+&quot;]&quot;]" />
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_7">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[rowDetailBank]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[rowDetailBank+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                      </ui:ExcelApplicationScope>
                    </Sequence>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_73">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Assign sap:VirtualizedContainerService.HintSize="608,84.8" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[row]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[(Integer.Parse( row) +1).ToString]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:ReadRange AddHeaders="False" DataTable="[dt_Data]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="608,111.2" sap2010:WorkflowViewState.IdRef="ReadRange_5" Range="[&quot;A&quot;+row+&quot;:T&quot;+row]" SheetName="Data" WorkbookPath="[strPathInput+dCurrentDate.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.xlsx&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ReadRange>
          </Sequence>
        </ui:InterruptibleWhile.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InterruptibleWhile>
    </Sequence>
  </Sequence>
</Activity>